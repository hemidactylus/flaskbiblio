TODO

* nice-looking pages

* searches, pagination and so on
    A (cumbersome) method to handle pagination is up and running.
    Prepare query pages and the path to them in the interface!

* when inserting a new author or book warn if the vectorisation detects a cosine-similar item already on DB.
    Done. But at the moment:
        - it is evaluated on the fly for all authors/books
        - the desired check-box in the edit form is handled in a very cumbersone way in the endpoint code
        * Should rewrite and largely streamline the whole edit/insert endpoint handling!
        * Should outsource the similar-* issue to a separate module
        * Should uniformize the edits and form-to-object, reqargs-to-form mechanics.

        * Perhaps work on 2-gram of letters, might be funnier?

* deploy within a lighty or apache or nginx environment (fastCGI? gunicorn? flup? .htaccess?)

* in the two addreplace calls, when updating: the list of attributes must be cleverly handled instead of a lot of
    explicit member copies that are now being done.

* Some advanced stats in a dedicated subpage of 'index'
    E.g. book breakdown per genre
    E.g. percentage and number of books that are out
